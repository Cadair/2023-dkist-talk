#+REVEAL_ROOT: ./src/reveal.js/
#+REVEAL_MATHJAX_URL: ./src/mathjax/es5/tex-chtml.js
#+REVEAL_HIGHLIGHT_CSS: %r/plugin/highlight/monokai.css
#+REVEAL_PLUGINS: (highlight)
#+REVEAL_THEME: simple
#+REVEAL_DEFAULT_SLIDE_BACKGROUND: ./images/filt_Gband1_yellow1_1920.jpg
#+REVEAL_DEFAULT_SLIDE_BACKGROUND_OPACITY: 0.3
#+OPTIONS: toc:nil
#+OPTIONS: num:nil
#+OPTIONS: reveal_title_slide:nil
#+REVEAL_EXTRA_CSS: org.css
#+REVEAL_INIT_OPTIONS: hash: true, slideNumber: "c/t", showSlideNumber: 'speaker', center: false

* DKIST Level 1 Data and Using it in Python
:PROPERTIES:
:CUSTOM_ID: title
:reveal_extra_attr: class="title"
:reveal_background: ./images/vbi_blue_hires.jpg
:reveal_background_opacity: 1
:reveal_background_position: top
:END:

#+REVEAL_HTML: <h3 style="padding-bottom: 20%;"> Stuart Mumford </h3>
#+REVEAL_HTML: <a href="https://aperio.software"><img style='float: left; width: 20%; margin-top: 100px; height: 15%;' src='images/aperio.svg'/></a><a href="https://nso.edu"><img style='float: right; width: 20%; margin-top: 60px; height: 15%; margin-right: 5%%;' src='images/NSO-logo-blue.png'/></a>

* The Inouye Solar Telescope
:PROPERTIES:
:CUSTOM_ID: dkist
:reveal_background: ./images/dkist-exterior.jpg
:reveal_background_opacity: 0.8
:END:
#+BEGIN_NOTES
#+END_NOTES

#+REVEAL_HTML: <div class='left' style='width: 60%; margin-left:-5em;font-weight: bolder;'>
- The largest mirror of any solar telescope in the world - 4 meters.
- First solar images captured by the observatory in late 2019.
- Will be operational for at least 44 years â€“ or four solar cycles.
- Two currently commissioned instruments:
  - Visible Spectropolarimeter (VISP)
  - Visible Broadband Imager (VBI)
- Three more instruments in commissioning:
  - Cryogenic Near Infrared Spectropolarimeter (Cryo-NIRSP)
  - Diffraction Limited Near Infrared Spectropolarimeter (DL-NIRSP)
  - Visible Tunable Filter (VTF)

#+REVEAL_HTML: </div>

* Python Tools
:PROPERTIES:
:CUSTOM_ID: python
:END:
#+BEGIN_NOTES
A quick summary, more details later
#+END_NOTES


#+REVEAL_HTML: <div class='left'>

- ~dkist~ package available now on PyPI and conda-forge.
- Developed openly on GitHub since the start.
- Provides:
  - a plugin for SunPy's Fido to search datasets,
  - helpers for downloading FITS files with Globus,
  - A ~Dataset~ class based on ~NDCube~.
- Uses ~dask~ to delay I/O of FITS files.
- Uses ~gWCS~ to represent the coordinates of the whole dataset.

#+attr_html: :width 80%
[[./images/dkist-repo-overview.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class='right'>

#+attr_html: :width 90%
[[./images/vbi_plot.png]]

#+REVEAL_HTML: </div>

* Level One Data
:PROPERTIES:
:CUSTOM_ID: datasets
:END:

The data holdings at the DKIST Data Center are catalogued in unique "datasets".

#+BEGIN_QUOTE
A dataset consists of a set of observations taken by a single instrument, at a single pass band.
#+END_QUOTE

This means that a dataset can contain a wide variety of data, slit-spectra, imaging, spectropolarimetic data etc.

#+attr_html: :width 100%
[[./images/portal_results.png]]

** Makeup of a dataset
:PROPERTIES:
:CUSTOM_ID: datasets-layout
:END:
#+BEGIN_NOTES
One ASDF - all metadata + gWCS
Many FITS - current max 33,000 - 100s of 1000s possible
FITS get ordered
#+END_NOTES

- Each "calibrated exposure" is in a FITS file with a complete header.
- Each dataset contains /many/ FITS files (current max is 33,000).
- To reconstruct these files into a multi-dim array we need to /order/ them.

** ASDF Files
:PROPERTIES:
:CUSTOM_ID: datasets-layout
:END:
#+BEGIN_NOTES
What is an ASDF file.
What's in the ASDF file.
Why the ASDF file.
#+END_NOTES

** Search and Download - Data / Metadata Separation
:PROPERTIES:
:CUSTOM_ID: challenge-download
:END:

#+BEGIN_QUOTE
How can we make it possible to download a subset of the data based on metadata.
#+END_QUOTE

The scale of the DKIST datasets mean that pre-processing them before download is not feasible.

Maximum flexibility is achieved by facilitating download based on all metadata.

Arbitrary queries based on all available metadata is a complex problem for a web service.

*** Search for metadata data
:PROPERTIES:
:CUSTOM_ID: search-and-download
:END:

The DKIST search portal and ~dkist~ package allow searching based on a limited subset of all metadata.

Downloading the ASDF file gives you a /complete/ set of metadata for all files contained in a dataset.

#+BEGIN_SRC python
# Select headers for only frames with bad r0
bad_headers = ds.headers[ds.headers["ATMOS_R0"] > 1]

# Slice up to the index of the first bad frame
sds = ds[0, :bad_headers[0]["DINDEX3"]-1, :, :]

# Download only files with good seeing.
sds.files.download(path="~/dkist/data/{dataset_id}/")
#+END_SRC


** Too many files - Dask and delayed IO

* Thank You

#+REVEAL_HTML: <div class='left'>

Find me online:

 [[https://cadair.com][cadair.com]]

 [[https://matrix.to/#/@cadair:cadair.com][@cadair:cadair.com]] on Matrix

 [[https://mastodon.matrix.org/@Cadair][@Cadair@mastodon.matrix.org]] on Mastodon

 [[https://github.com/Cadair][@Cadair]] on GitHub

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class='right'>

#+attr_html: :width 500px
[[./images/cadair.jpg]]

#+REVEAL_HTML: </div>
